package com.example.vittles.di

import android.content.Context
import com.example.data.ProductDaoImpl
import com.example.data.ProductModelMapperImpl
import com.example.data.ProductsRepositoryImpl
import com.example.data.createProductDaoImpl
import com.example.domain.ProductsRepository
import dagger.Module
import dagger.Provides
import javax.inject.Singleton

/**
 * Main database module for dependency injections.
 *
 * @author Jeroen Flietstra
 * @author Arjen Simons
 */
@Module
class AppDbModule {

    /**
     * Provides the product DAO as injection.
     *
     * @param context Context needed for getting the instance of the Room database. Generated by Dagger framework.
     */
    @Singleton
    @Provides
    fun provideProductDaoImpl(context: Context) = createProductDaoImpl(context)

    /**
     * Provides the product model mapper as injection. Generated by Dagger framework.
     *
     */
    @Singleton
    @Provides
    fun provideProductModelMapper() = ProductModelMapperImpl()


    /**
     * Provides the products repository with the given injections. Generated by Dagger framework.
     *
     * @param productDaoImpl ProductDaoImpl needed for getting an instance of the products repository.
     * @param mapper Mapper needed for getting an instance of the products repository.
     * @return Instance of ProductsRepository.
     */
    @Singleton
    @Provides
    fun provideProductsRepository(productDaoImpl: ProductDaoImpl, mapper: ProductModelMapperImpl): ProductsRepository = ProductsRepositoryImpl(productDaoImpl, mapper)
}