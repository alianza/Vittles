package com.example.vittles.di

import android.app.Application
import com.example.domain.ProductsRepository
import dagger.BindsInstance
import dagger.Component
import javax.inject.Singleton

/**
 * Main app component which will make it possible to build other components.
 *
 */
@Singleton
@Component(modules = [AppModule::class])
interface AppComponent {
    /**
     * Builder interface.
     *
     */
    @Component.Builder
    interface Builder {
        /**
         * method needed for the application build.
         *
         * @param application Application to be built.
         * @return Builder for building the application.
         */
        @BindsInstance
        fun application(application: Application): Builder

        /**
         * Method that will build the application.
         *
         * @return The component of the application.
         */
        fun build(): AppComponent
    }

    /**
     * Generated by Dagger framework.
     *
     * @return The ProductsRepository of the injection.
     */
    fun exposeProductsRepository(): ProductsRepository
}

/*
@Component: enable selected modules and used for performing dependency injection.
 */