
package com.example.vittles.productlist

import com.example.domain.productdelete.DeleteProductUseCase
import com.example.domain.repositories.ProductsRepository
import com.example.domain.productfetch.FetchProductsUseCase
import dagger.Module
import dagger.Provides
/**
 * Module for main product dependency injections.
 *
 * @author Jeroen Flietstra
 * @author Arjen Simons
 */
@Module
class ProductsModule {

    /**
     * Provides the FetchProductsUseCase as injection. Generated by Dagger framework.
     *
     * @param productsRepository ProductsRepository needed for the FetchProductsUseCase.
     */
    @Provides
    fun provideProductsUseCase(productsRepository: ProductsRepository) = FetchProductsUseCase(productsRepository)

    /**
     * Provides the DeleteProductsUseCase as injection. Generated by Dagger framework.
     *
     * @param productsRepository ProductsRepository needed for the DeleteProductsUseCase.
     */
    @Provides
    fun provideProductDeleteUseCase(productsRepository: ProductsRepository) = DeleteProductUseCase(productsRepository)

    /**
     * Provides the FetchProductsUseCase as injection. Generated by Dagger Framework.
     *
     * @param fetchProductsUseCase FetchProductsUseCase needed for the ProductPresenter.
     */
    @Provides
    fun providePresenter(fetchProductsUseCase: FetchProductsUseCase , deleteProductUseCase: DeleteProductUseCase) =
        ProductsPresenter(fetchProductsUseCase, deleteProductUseCase)
}